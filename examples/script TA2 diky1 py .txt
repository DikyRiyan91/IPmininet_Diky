from mininet.net import Mininet
from mininet.node import Controller, RemoteController
from mininet.cli import CLI
from mininet.link import TCLink
from mininet.topo import Topo
from mininet.util import dumpNodeConnections

class CustomTopo(Topo):
    def build(self):
        # Add hosts with IPv6 addresses
        h1 = self.addHost('h1', ip=' ', ipv6='2001:db8:1::1/64')
        h2 = self.addHost('h2', ip=' ', ipv6='2001:db8:1::2/64')
        h3 = self.addHost('h3', ip=' ', ipv6='2001:db8:1::3/64')
        h4 = self.addHost('h4', ip=' ', ipv6='2001:db8:1::4/64')
        
        # Add switches
        s1 = self.addSwitch('s1')
        s2 = self.addSwitch('s2')
        s3 = self.addSwitch('s3')
        s4 = self.addSwitch('s4')
        
        # Add links between hosts and switches
        self.addLink(h1, s1, intfName1='h1-eth0', intfName2='s1-eth0')
        self.addLink(h2, s2, intfName1='h2-eth0', intfName2='s2-eth0')
        self.addLink(h3, s3, intfName1='h3-eth0', intfName2='s3-eth0')
        self.addLink(h4, s4, intfName1='h4-eth0', intfName2='s4-eth0')
        
        # Add links between switches
        self.addLink(s1, s2, intfName1='s1-eth1', intfName2='s2-eth1')
        self.addLink(s2, s3, intfName1='s2-eth2', intfName2='s3-eth1')
        self.addLink(s3, s4, intfName1='s3-eth2', intfName2='s4-eth1')
        self.addLink(s4, s1, intfName1='s4-eth2', intfName2='s1-eth2')
        self.addLink(s1, s3, intfName1='s1-eth3', intfName2='s3-eth3')
        self.addLink(s2, s4, intfName1='s2-eth3', intfName2='s4-eth3')

def main():
    topo = CustomTopo()
    net = Mininet(topo=topo, controller=RemoteController, link=TCLink)
    net.start()
    
    # Print connections to check if everything is connected
    dumpNodeConnections(net.hosts)
    
    # Configure IPv6 addresses on hosts
    net.get('h1').cmd('ip -6 addr add 2001:db8:1::1/64 dev h1-eth0')
    net.get('h2').cmd('ip -6 addr add 2001:db8:1::2/64 dev h2-eth0')
    net.get('h3').cmd('ip -6 addr add 2001:db8:1::3/64 dev h3-eth0')
    net.get('h4').cmd('ip -6 addr add 2001:db8:1::4/64 dev h4-eth0')
    
    # Start CLI for interaction
    CLI(net)
    
    # Stop the network
    net.stop()

if __name__ == '__main__':
    main()
